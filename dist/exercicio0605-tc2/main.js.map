{"version":3,"sources":["./src/app/database/database.service.ts","./src/environments/environment.ts","./src/app/formulario-cadastro/formulario-cadastro.component.ts","./src/app/formulario-cadastro/formulario-cadastro.component.html","./src/app/lista-de-pessoas/lista-de-pessoas.component.ts","./src/app/lista-de-pessoas/lista-de-pessoas.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/mostrar-pessoa/mostrar-pessoa.component.ts","./src/app/mostrar-pessoa/mostrar-pessoa.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Pessoa } from '../models/Pessoa';\nimport { Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DatabaseService {\n  constructor(private http : HttpClient) { }\n\n  @Output() fire: EventEmitter<any> = new EventEmitter();\n\n  // Headers\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  baseURL = \"https://sc300161x-tc2-deploy-aplicacao.herokuapp.com/api/\";\n  //baseURL = \"http://localhost:8080/api/\";\n\n  getAllPeople() : Observable<Pessoa[]> {\n    return this.http.get<Pessoa[]>(this.baseURL + \"pessoa/\");\n  }\n\n  addPessoa(person): Observable<any> {\n    return this.http.post(this.baseURL + 'pessoa/', person, { observe: \"response\" });\n  }\n\n  deletarPessoa(id) : Observable<any> {\n    return this.http.delete(this.baseURL + 'pessoa/' + id, { observe: \"response\"})\n  }\n\n  atualizarPessoa(person) : Observable<any> {\n    return this.http.put(this.baseURL + 'pessoa/' + person._id, person, { observe: \"response\"})\n  }\n  \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, Output, EventEmitter, OnInit} from '@angular/core';\nimport { DatabaseService } from '../database/database.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Pessoa } from '../models/Pessoa';\n\n@Component({\n  selector: 'app-formulario-cadastro',\n  templateUrl: './formulario-cadastro.component.html',\n  styleUrls: ['./formulario-cadastro.component.scss']\n})\nexport class FormularioCadastroComponent implements OnInit {\n\n  @Input() pessoaEditar: Pessoa;\n\n  @Output() clearPessoa = new EventEmitter<string>();\n\n  constructor(private databaseService: DatabaseService) {}\n\n  registroDePessoa : FormGroup = null;\n  buttonText : String;\n\n  cond : String = null;\n\n  onSubmit() {\n    if (!this.registroDePessoa.invalid){\n      if (!this.registroDePessoa.value.foto){\n        this.registroDePessoa.value.foto = 'https://pbs.twimg.com/profile_images/1185564118/bart2.JPG';\n      }\n      //Caso for uma adição\n      if(this.pessoaEditar == null){\n        this.databaseService.addPessoa(this.registroDePessoa.value).subscribe(res => {\n          console.log(res);\n          if(res.ok == true) {\n            alert(\"Pessoa cadastrada com sucesso!\");\n            //Atualizar Página\n            location.href = location.href;\n          } else {\n            alert(\"Não foi possível cadastrar a pessoa!\");\n          }\n        });\n      } else{\n        //Salva os novos dados\n        this.pessoaEditar.nome = this.registroDePessoa.value.nome;\n        this.pessoaEditar.idade = this.registroDePessoa.value.idade;\n        this.pessoaEditar.foto = this.registroDePessoa.value.foto;\n        //Atualiza\n        this.databaseService.atualizarPessoa(this.pessoaEditar).subscribe(res => {\n          console.log(res);\n          if(res.ok == true) {\n            alert(\"Pessoa editada com sucesso!\");\n            this.clearPessoa.emit(null);\n            this.cond = null;\n            //Atualizar Página\n            location.href = location.href;\n          } else {\n            alert(\"Não foi possível editar a pessoa!\");\n          }\n        });\n      }\n      this.registroDePessoa.reset();\n    } else {\n      alert('Nome e Idade são necessários!');\n    }\n\n  }\n\n  carregaDados(){\n    if(this.registroDePessoa == null || (this.pessoaEditar != null && this.cond == null)){\n      if(this.pessoaEditar == null){\n        this.registroDePessoa = new FormGroup({\n          nome: new FormControl('', Validators.required),\n          idade: new FormControl('', Validators.required),\n          foto: new FormControl(''),\n        });\n        this.buttonText = \"Cadastrar\";\n      } else{\n        this.cond = \"block\";\n        this.registroDePessoa = new FormGroup({\n          nome: new FormControl(this.pessoaEditar.nome, Validators.required),\n          idade: new FormControl(this.pessoaEditar.idade, Validators.required),\n          foto: new FormControl(this.pessoaEditar.foto),\n        });\n        this.buttonText = \"Editar\";\n      }\n    }\n\n    return this.registroDePessoa;\n  }\n\n  ngOnInit(): void {\n    \n  }\n}\n","<section>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"carregaDados()\">\n        <div class=\"form-group\">\n            <label for=\"nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"nome\" id=\"nome\" placeholder=\"Digite o nome da pessoa\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"idade\">Idade</label>\n            <input type=\"number\" class=\"form-control\" formControlName=\"idade\" id=\"idade\" placeholder=\"Digite a idade da pessoa\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"imagem\">Imagem</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"foto\" id=\"imagem\" placeholder=\"Link da imagem\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">{{buttonText}}</button>\n    </form>\n</section>","import { DatabaseService } from '../database/database.service';\nimport { Pessoa } from '../models/Pessoa';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-lista-de-pessoas',\n  templateUrl: './lista-de-pessoas.component.html',\n  styleUrls: ['./lista-de-pessoas.component.scss']\n})\nexport class ListaDePessoasComponent implements OnInit {\n\n  @Output() pessoaParaEditar = new EventEmitter<Pessoa>();\n\n  constructor(private databaseService: DatabaseService) {}\n\n  pessoas: Pessoa[] = [];\n  selectedPessoa: Pessoa;\n\n  getAllPeople() : void {\n    this.databaseService.getAllPeople().subscribe(res => {\n      this.pessoas = res;\n      this.pessoas = this.pessoas.filter(p => p.nome)\n    });\n  }\n\n  getPessoa(person){\n    this.selectedPessoa = person;\n  }\n\n  clearPessoa() {\n    this.selectedPessoa = null;\n  }\n\n  editarPessoa(pessoa){\n    this.pessoaParaEditar.emit(pessoa);\n  }\n\n  ngOnInit(): void {\n    this.getAllPeople();\n  }\n\n}\n","<section>\n    <h2>Pessoas</h2>\n    <ul *ngIf=\"pessoas.length > 0\">\n        <li *ngFor=\"let p of pessoas\" [class.completed]=\"p.complete\">\n            <a (click)=\"getPessoa(p)\" href=\"#\">{{p.nome}}</a>\n        </li>\n    </ul>\n    <app-mostrar-pessoa *ngIf=\"selectedPessoa\" [pessoa]=\"selectedPessoa\" [show]=\"true\" (clearPessoa)=\"clearPessoa($event)\" (pessoaParaEditar)=\"editarPessoa($event)\"></app-mostrar-pessoa>\n    <p *ngIf=\"pessoas.length === 0\">Nenhuma pessoa foi cadastrada</p>\n</section>","import { Component, Input } from '@angular/core';\nimport { Pessoa } from './models/Pessoa';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  title = 'Exercicio 06/05 - TC2';\n  show2 = true;\n\n  pessoaParaEditar: Pessoa = null;\n\n  hiddenOrShow(){\n    this.show2 = !this.show2;\n  }\n\n  editarPessoa(pessoa){\n    this.show2 = false;\n    this.pessoaParaEditar = pessoa;\n  }\n\n  clearPessoa(n) {\n    this.pessoaParaEditar = null;\n  }\n  \n}\n","<main class=\"grid container\">\n  <div>\n    <app-lista-de-pessoas (pessoaParaEditar)=\"editarPessoa($event)\"></app-lista-de-pessoas>\n    <button class=\"btn btn-outline-primary\" (click)=\"hiddenOrShow()\">Adicionar Pessoa</button>\n  </div>\n  <div>\n    <button [hidden]=\"show2\" style=\"float: right;\" class=\"btn btn-outline-danger\" (click)=\"hiddenOrShow()\">X</button>\n    <br>\n    <app-formulario-cadastro [hidden]=\"show2\" [pessoaEditar]=\"pessoaParaEditar\" (clearPessoa)=\"clearPessoa($event)\"></app-formulario-cadastro>\n  </div>\n</main>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormularioCadastroComponent } from './formulario-cadastro/formulario-cadastro.component';\nimport { ListaDePessoasComponent } from './lista-de-pessoas/lista-de-pessoas.component';\nimport { MostrarPessoaComponent } from './mostrar-pessoa/mostrar-pessoa.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent, FormularioCadastroComponent, ListaDePessoasComponent, MostrarPessoaComponent],\n  imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Pessoa } from '../models/Pessoa';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { DatabaseService } from '../database/database.service';\n\n@Component({\n  selector: 'app-mostrar-pessoa',\n  templateUrl: './mostrar-pessoa.component.html',\n  styleUrls: ['./mostrar-pessoa.component.scss']\n})\nexport class MostrarPessoaComponent {\n  @Input() pessoa: Pessoa;\n\n  @Input() show: boolean;\n\n  @Output() clearPessoa = new EventEmitter<string>();\n\n  @Output() pessoaParaEditar = new EventEmitter<Pessoa>();\n\n  constructor(private databaseService: DatabaseService) {}\n\n  fecharCard(): void {\n    this.show = false;\n    this.clearPessoa.emit(null);\n  }\n\n  removerPessoa(id){\n    this.databaseService.deletarPessoa(id).subscribe(res => {\n      if(res.ok == true) {\n        alert(\"Pessoa removida com sucesso!\");\n        this.fecharCard();\n        location.href = location.origin;\n      } else {\n        alert(\"Não foi possível remover a pessoa!\");\n      }\n    });\n  }\n\n  editarPessoa(pessoa){\n    this.pessoaParaEditar.emit(pessoa);\n    this.fecharCard();\n  }\n}\n","<section [ngClass]=\"show ? 'show' : 'hidden'\">\n  <div class=\"card\" style=\"width: 18rem;\">\n    <button class=\"btn btn-outline-danger\" (click)=\"fecharCard()\">X</button>\n    <img class=\"card-img-top\" src=\"{{pessoa.foto}}\" alt=\"{{pessoa.nome}}\" title=\"{{pessoa.nome}}\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{pessoa.nome}}</h5>\n      <p class=\"card-text\">Idade: {{pessoa.idade}} anos</p>\n      <button (click)=\"editarPessoa(pessoa)\" class=\"btn btn-outline-success btn-block\">Editar</button>\n      <br>\n      <button (click)=\"removerPessoa(pessoa._id)\" class=\"btn btn-outline-danger btn-block\">Remover</button>\n    </div>\n  </div>\n  <br>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}